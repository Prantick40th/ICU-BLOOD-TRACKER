SET VERIFY OFF;
SET SERVEROUTPUT ON;

--TAKE INPUT FROM USER
ACCEPT AD_EMAIL CHAR PROMPT 'enter your email : '
ACCEPT OLDPASS CHAR PROMPT 'enter your old password :'
ACCEPT NEWPASS CHAR PROMPT 'enter your new password :'

--TRIGGER CREATE
CREATE OR REPLACE TRIGGER ADMIN_PASS_CHANGE 
before update of Password ON ADMINTABLE
DECLARE
BEGIN
	DBMS_OUTPUT.PUT_LINE('TRIGGER AND DATA UPDATE IN THE ADMIN TABLE');
END;
/

CREATE or REPLACE PROCEDURE changer(
A IN ADMINTABLE.AdminEmail%TYPE,
OLD_PASS IN ADMINTABLE.Password%TYPE,
NEW_PASS IN ADMINTABLE.Password%TYPE)
IS
	DATANOTFOUND EXCEPTION;
	FLAG NUMBER;

BEGIN
	FLAG:= 0;

--CHANGE PASSWORD

FOR R IN (SELECT * FROM ADMINTABLE) LOOP

  IF R.AdminEmail = A AND R.Password = OLD_PASS  THEN
  UPDATE ADMINTABLE SET ADMINTABLE.Password = NEW_PASS where ADMINTABLE.AdminEmail = A;
  FLAG:=1;
  EXIT;
  END IF;
  
  IF FLAG = 0 THEN
		RAISE DATANOTFOUND;
  END IF;
 
END LOOP;

EXCEPTION
WHEN DATANOTFOUND THEN
    DBMS_OUTPUT.PUT_LINE('DATA NOT FOUND EXCEPTION RAISE' );

END changer;
/

DECLARE
	A  ADMINTABLE.AdminEmail%TYPE;
	OLD_PASS ADMINTABLE.Password%TYPE;
	NEW_PASS ADMINTABLE.Password%TYPE;

	DATANOTFOUND EXCEPTION;

BEGIN 
	A:='&AD_EMAIL';
	OLD_PASS:='&OLDPASS';
	NEW_PASS:='&NEWPASS';

	changer(A, OLD_PASS, NEW_PASS);
END;
/

COMMIT;